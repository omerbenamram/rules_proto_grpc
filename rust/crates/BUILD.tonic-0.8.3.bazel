###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run //rust:crates_vendor
###############################################################################

# buildifier: disable=bzl-visibility
load("@rules_rust//crate_universe/private:selects.bzl", "select_with_or")
load(
    "@rules_rust//rust:defs.bzl",
    "rust_library",
)

package(default_visibility = ["//visibility:public"])

# licenses([
#     "TODO",  # MIT
# ])

rust_library(
    name = "tonic",
    srcs = glob(
        include = [
            "**/*.rs",
        ],
        exclude = [
        ],
    ),
    aliases = select({
        "//conditions:default": {
            "@rules_proto_grpc_rust__prost-0.11.6//:prost": "prost1",
        },
    }),
    compile_data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            "BUILD.bazel",
            "BUILD",
            "WORKSPACE.bazel",
            "WORKSPACE",
        ],
    ) + select_with_or({
        "//conditions:default": [
        ],
    }),
    crate_features = [
        "async-trait",
        "axum",
        "channel",
        "codegen",
        "default",
        "h2",
        "hyper",
        "hyper-timeout",
        "prost",
        "prost-derive",
        "prost1",
        "tokio",
        "tower",
        "tracing-futures",
        "transport",
    ],
    crate_root = "src/lib.rs",
    data = select_with_or({
        "//conditions:default": [
        ],
    }),
    edition = "2018",
    proc_macro_deps = [
    ] + select({
        "//conditions:default": [
            "@rules_proto_grpc_rust__async-trait-0.1.63//:async_trait",
            "@rules_proto_grpc_rust__prost-derive-0.11.6//:prost_derive",
        ],
    }),
    rustc_env = {
    },
    rustc_env_files = select_with_or({
        "//conditions:default": [
        ],
    }),
    rustc_flags = [
        # In most cases, warnings in 3rd party crates are not interesting as
        # they're out of the control of consumers. The flag here silences
        # warnings. For more details see:
        # https://doc.rust-lang.org/rustc/lints/levels.html
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.8.3",
    deps = [
    ] + select({
        "//conditions:default": [
            "@rules_proto_grpc_rust__async-stream-0.3.3//:async_stream",
            "@rules_proto_grpc_rust__axum-0.6.4//:axum",
            "@rules_proto_grpc_rust__base64-0.13.1//:base64",
            "@rules_proto_grpc_rust__bytes-1.3.0//:bytes",
            "@rules_proto_grpc_rust__futures-core-0.3.25//:futures_core",
            "@rules_proto_grpc_rust__futures-util-0.3.25//:futures_util",
            "@rules_proto_grpc_rust__h2-0.3.15//:h2",
            "@rules_proto_grpc_rust__http-0.2.8//:http",
            "@rules_proto_grpc_rust__http-body-0.4.5//:http_body",
            "@rules_proto_grpc_rust__hyper-0.14.23//:hyper",
            "@rules_proto_grpc_rust__hyper-timeout-0.4.1//:hyper_timeout",
            "@rules_proto_grpc_rust__percent-encoding-2.2.0//:percent_encoding",
            "@rules_proto_grpc_rust__pin-project-1.0.12//:pin_project",
            "@rules_proto_grpc_rust__prost-0.11.6//:prost",
            "@rules_proto_grpc_rust__tokio-1.24.2//:tokio",
            "@rules_proto_grpc_rust__tokio-stream-0.1.11//:tokio_stream",
            "@rules_proto_grpc_rust__tokio-util-0.7.4//:tokio_util",
            "@rules_proto_grpc_rust__tower-0.4.13//:tower",
            "@rules_proto_grpc_rust__tower-layer-0.3.2//:tower_layer",
            "@rules_proto_grpc_rust__tower-service-0.3.2//:tower_service",
            "@rules_proto_grpc_rust__tracing-0.1.37//:tracing",
            "@rules_proto_grpc_rust__tracing-futures-0.2.5//:tracing_futures",
        ],
    }),
)
